security:
    role_hierarchy:
#        SONATA:
#            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT
#
#        ROLE_ACCESSED:
#            # Используется внутри SA
#            - ROLE_SONATA_ADMIN
#
#        ROLE_ADMIN:  [ROLE_SONATA_ADMIN]
#        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are using acl then this line must be commented

   
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email #fixme

    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # -> custom firewall for the admin area of the URL
        admin:
            pattern:  /admin(.*)
            context:  user
            form_login:
                provider:  fos_userbundle
                login_path:  /admin/login
                default_target_path: /admin/dashboard
                use_forward: true
                use_referer: true
                check_path:  /admin/login_check
                failure_path:  /admin/login
            logout:
                path:  /admin/logout
                target: /admin/login
            anonymous:  true
        # -> end custom configuration
                        
        secure_area:
            pattern: ^/secure_area
            remember_me: 
                secret:   gh53564
                lifetime: 31536000
            anonymous:  true
            logout:
                path:   /secure_area/logout
                target: /secure_area/login #where to go after logout
            form_login:
                provider: fos_userbundle
#                csrf_provider: form.csrf_provider
                csrf_provider: security.csrf.token_manager
                check_path: /secure_area/login_check
                login_path: /secure_area/login
                default_target_path:  / #default location to redirect after successful login
   
    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        #....
        - { path: ^/secure_area/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/secure_area/logout, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/secure_area/connect, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/secure_area/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/secure_area/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/secure_area/resetting, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/secure_area, roles: ROLE_USER }
        
        # Secured part of the site
        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_ACCESSED] }
#        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, role: IS_AUTHENTICATED_FULLY }
        
        
        